@use '@angular/material' as mat;

// REMOVED: Theme definitions and core/theme includes.
// Component styles will inherit from the global theme applied in styles.scss

:host {
  display: block; // Ensure component takes up layout space
}

.config-container {
  padding: 20px;
}

.loading-spinner {
  display: flex;
  justify-content: center;
  align-items: center;
  margin-top: 40px;
}

.config-card {
  margin-top: 20px;
  // Card background/text color should be inherited from the global theme.
  // No explicit color settings needed here unless overriding defaults.
}

// Expansion Panel Header Customization (Optional)
.mat-expansion-panel-header {
  font-weight: 500;
}

// Container for FormArray items
.array-container {
  margin-bottom: 15px;
  padding-left: 10px;
}

// Chips list styling - should inherit theme colors
.mat-mdc-chip-set {
  margin-bottom: 10px;
}
.mat-mdc-standard-chip {
  margin: 4px;
}
.mat-mdc-chip-remove {
  margin-left: 8px !important;
}

// Add item form styling
.add-item-form {
  display: flex;
  align-items: center;
  gap: 10px;
  margin-top: 10px;

  mat-form-field {
    flex-grow: 1;
  }
  // Icon button color should inherit
}

// Bonus Rule Group styling
.bonus-rule-group {
  display: flex;
  align-items: center;
  flex-wrap: wrap; // Allow wrapping on smaller screens
  gap: 15px;
  margin-bottom: 10px;
  padding: 10px;
  border: 1px solid var(--mat-divider-color, rgba(0,0,0,0.12)); // Use divider variable
  border-radius: 4px;

  mat-form-field {
    flex: 1 1 120px; // Adjust basis for responsiveness
  }
  // Icon button color should inherit
}

// Settings Group (Display, etc.)
.settings-group {
  display: flex;
  flex-direction: column;
  gap: 15px;
  padding: 10px;

  mat-slide-toggle {
    margin-bottom: 5px;
  }
  mat-form-field.full-width {
    width: 100%;
  }
}

// Save button area
.save-button-container {
  margin-top: 25px;
  padding-top: 15px;
  border-top: 1px solid var(--mat-divider-color, rgba(0,0,0,0.12));
  display: flex;
  align-items: center;
  gap: 15px;

  button {
      display: inline-flex;
      align-items: center;
      gap: 8px;
  }
}

.save-status {
    font-weight: 500;
    &.success {
        color: var(--mat-success-color, green); // Use variable
    }
    &.error {
         color: var(--mat-warn-color, #f44336); // Use variable
    }
}


// Message styles
.info-message, .error-message {
    margin-top: 20px;
    text-align: center;
    padding: 15px;
    border-radius: 4px;
    border: 1px solid transparent;
}
.info-message {
    background-color: var(--mat-info-message-background-color, #e0e0e0);
    color: var(--mat-info-message-text-color, rgba(0,0,0,0.87));
    border-color: var(--mat-info-message-border-color, #bdbdbd);
}
.error-message {
    background-color: var(--mat-error-message-background-color, rgba(244, 67, 54, 0.1));
    color: var(--mat-warn-color, #f44336);
    border-color: var(--mat-warn-color, #f44336);
}

// Pre tag styling
pre {
  background-color: var(--mat-pre-background-color, rgba(128, 128, 128, 0.1));
  padding: 15px;
  border-radius: 4px;
  overflow-x: auto;
  color: var(--mat-pre-text-color, inherit);
}

// Add necessary variable definitions to styles.scss if needed
