@use '@angular/material' as mat;

// Import your theme definitions (adjust path if needed)
// Assuming theme.scss is in the same directory or accessible path
@use 'theme' as theme; // Use the alias 'theme' to access variables like theme.$agency-light-theme

// Apply the core Material styles (typography, density, etc.)
@include mat.core();

// Apply the color palettes globally for the light theme
:root {
  // Apply typography and density based on the light theme
  @include mat.all-component-themes(theme.$agency-light-theme);

  // Define some global CSS variables for consistent spacing, etc.
  --app-content-padding: 20px;
  --app-card-spacing: 20px;
  --app-section-spacing: 24px;
}

// Apply the dark theme colors when the .dark-theme class is present
.dark-theme {
  @include mat.all-component-colors(theme.$agency-dark-theme);
  // You could add dark-theme specific CSS variables here if needed
}

// Basic Reset & Global Styles
html,
body {
  height: 100%;
  margin: 0;
  font-family: Roboto, "Helvetica Neue", sans-serif; // Material default font
}

body {
  // Use Material theme background and text color
  // These will automatically switch with the .dark-theme class
  background-color: mat.get-theme-color(theme.$agency-light-theme, background, background);
  color: mat.get-theme-color(theme.$agency-light-theme, foreground, text);

  &.dark-theme {
    background-color: mat.get-theme-color(theme.$agency-dark-theme, background, background);
    color: mat.get-theme-color(theme.$agency-dark-theme, foreground, text);
  }
}

// Consistent heading styles (optional, Material typography handles much of this)
h1,
h2,
h3,
h4,
h5,
h6 {
  margin-top: 0;
  margin-bottom: 0.75em;
  font-weight: 400; // Adjust as needed
}

h1 {
  font-size: 2.2rem;
  line-height: 1.2;
}

h2 {
  font-size: 1.8rem;
  line-height: 1.2;
}

h3 {
  font-size: 1.4rem;
  line-height: 1.3;
}

a {
  text-decoration: none;
  // Inherit color by default, let components override
  color: inherit;
  // Use theme color for links if desired
  // color: mat.get-theme-color(theme.$agency-light-theme, primary);
  // .dark-theme & {
  //   color: mat.get-theme-color(theme.$agency-dark-theme, primary);
  // }
}

// Utility: Page Container for consistent padding
.page-container {
  padding: var(--app-content-padding);
  box-sizing: border-box; // Include padding in width/height
}

// Utility: Responsive container for simple centering/max-width
.responsive-container {
  width: 100%;
  max-width: 1200px; // Adjust max-width as needed
  margin: 0 auto; // Center the container
  padding: 0 var(--app-content-padding); // Add horizontal padding
  box-sizing: border-box;
}

// Helper for spacing elements vertically
.vertical-spacing>*+* {
  margin-top: var(--app-section-spacing);
}
